{"version":3,"sources":["components/navbar/Navbar.jsx","components/layout/MainLayout.jsx","pages/Home.jsx","components/auth/auth-service.jsx","components/auth/Signup.jsx","pages/Profile.jsx","pages/EditProfile.jsx","components/auth/Login.jsx","pages/Nearby.jsx","pages/NearbyUser.jsx","components/message/AllRooms.jsx","components/message/MessageList.jsx","components/message/Input.jsx","method.jsx","components/message/EachRoom.jsx","pages/Inbox.jsx","components/share/Login.jsx","components/share/Rooms.jsx","components/share/GameBoard.jsx","components/share/Chat.jsx","components/share/Games.jsx","pages/CommonRoom.jsx","pages/SharePage.jsx","components/message/ChatApp.jsx","pages/ChatPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","props","state","loggedInUser","user","this","getUser","setState","className","style","backgroundColor","opacity","to","textDecoration","color","Component","MainLayout","children","Home","userInSession","AuthService","signup","form","axios","method","baseURL","process","withCredentials","data","then","response","setUser","loggedin","service","get","login","username","password","coordinates","post","logout","localStorage","removeItem","create","setItem","JSON","stringify","Signup","handleFormSubmit","event","preventDefault","FormData","formRef","current","file","history","push","catch","error","console","log","handleChange","target","name","value","uploadPic","files","React","createRef","ref","onSubmit","type","onChange","e","Profile","logoutUser","backgroundImage","profilePicUrl","width","about","margin","onClick","EditProfile","append","_id","height","border","Login","longitude","coords","latitude","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Nearby","_isMounted","calculateUserDist","users","userLong","userLat","i","length","otherLong","otherLat","calculateDistance","sort","a","b","distance","sortedUsers","bind","lat1","lon1","lat2","lon2","Math","PI","x","cos","y","floor","sqrt","responseFromApi","eachUser","map","pathname","nearbyUserProps","NearbyUser","params","match","id","err","location","chatPartner","AllRooms","parse","getItem","otherUsers","eachRoom","rooms","room","index","roomName","filter","partner","isRoomActive","currentRoom","key","MessageList","eachMess","messages","message","senderId","text","Input","showEmojiPicker","handleSubmit","addEmoji","emoji","native","toggleEmojiPicker","set","onSelect","placeholder","EachRoom","currentUser","addMessage","prevProps","roomId","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","subscribeToRoom","messageLimit","hooks","onMessage","userIds","setRoom","sendMessage","Inbox","setCurrentRoom","chatRooms","path","render","class","handleUsernameChange","Rooms","joined","joinable","activeRoom","enterRoom","leaveRoom","joinedRooms","List","Item","Content","floated","Icon","joinableRooms","Header","as","divided","relaxed","pusher","Pusher","cluster","forceTLS","PIECES","GameBoard","board","players","activeCell","row","rowIndex","piece","columnIndex","pieceSymbol","font","fillOpacity","fill","Object","keys","player","Grid","Row","columns","Column","xmlns","viewBox","d","concat","apply","_handleBoardClick","subscribe","_refreshGame","unsubscribe","dim","getBoundingClientRect","clientX","left","clientY","top","cellX","cellY","request","fromRow","fromColumn","toRow","toColumn","Chat","newMessage","onUserJoined","onUserLeft","opponent","attachment","link","startsWith","substring","undefined","listStyle","padding","_challengePlayer","acceptGame","_acceptChallenge","game","child","_gameBoard","float","clear","el","messagesEnd","Form","_handleSubmit","_handleNewMessageChange","_scrollToBottom","scrollIntoView","behavior","fetchRequired","createRoom","addUserIds","startedGame","getPlayers","includes","Games","getJoinableRooms","lobby","find","joinRoom","lobbyId","setInterval","_pollRooms","white","black","whitePlayer","blackPlayer","chat","_startedGame","_enterRoom","_leaveRoom","CommonRoom","contents","enterGame","SharePage","justifyContent","display","routeProps","ChatApp","existRoom","usersInRoom","j","chatManager","private","customData","foo","ChatPage","App","getTheUser","fetchUser","exact","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.495c2d1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n// import AuthService from '../auth/auth-service';\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = { loggedInUser: null };\n    // this.service = new AuthService();\n  }\n\n  componentDidMount() {\n    debugger\n    let user= this.props.getUser(); \n    this.setState({loggedInUser:user})\n  }\n\n  render(){\n    if(this.state.loggedInUser){\n      return(\n        <nav className=\"Navbar\" style={{backgroundColor:\"#334455\", opacity:\"0.7\"}}>\n          <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n          <div className=\"navItems\">\n          <Link to=\"/profile\" style={{ textDecoration: 'none', color: \"white\"}}><h4 className=\"navItem\">Profile</h4></Link>\n          <Link to=\"/nearby\" style={{ textDecoration: 'none', color: \"white\"}}><h4 className=\"navItem\">Nearby</h4></Link>\n          <Link to=\"/share\" style={{ textDecoration: 'none', color: \"white\"}} ><h4 className=\"navItem\">Share</h4></Link>\n          <Link to=\"/inbox\" style={{ textDecoration: 'none', color: \"white\"}}><i className=\"navItem fas fa-comments fa-2x\"></i></Link>\n          </div>\n        </nav>\n      )\n    } else {\n      return ( \n        <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}>Login</Link>\n        </nav>\n      )\n    }\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Nav from '../navbar/Navbar';\nimport './MainLayout.css';\n\nexport default class MainLayout extends Component {\n    render() {\n        return (\n            <div className=\"MainLayout\">\n                <Nav {...this.props}/>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport {Link} from 'react-router-dom';\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n    render() {\n        if (this.props.userInSession){\n            return (\n                <div className=\"Homepage\">\n                <MainLayout {...this.props}>\n                    <div className=\"welcomeInfo\">\n                    <h1>talk.share.meet.</h1>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                    </p>\n                    </div>\n                </MainLayout>\n                </div>\n            )\n        }else {\n            return (\n            <div className=\"Homepage\">\n            {/* <MainLayout {...this.props}> */}\n            <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n            </nav>\n                <div className=\"welcomeInfo\">\n                <h1>talk.share.meet.</h1>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                </p>\n                <Link to='/signup' style={{ textDecoration: 'none' }}><button className=\"registerBtnHome\">Register</button></Link>\n                </div>\n            {/* </MainLayout> */}\n            </div>\n        ) \n        }   \n    }\n}\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API}`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (form) => {\n    return axios({\n      method:\"POST\",\n      baseURL:`${process.env.REACT_APP_API}/signup`,\n      withCredentials: true,\n      data:form\n    })\n    .then(response => {\n      this.setUser(response.data)\n      return response.data    \n    })\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  login = \n  // (username,password) => {\n  //   return axios({\n  //     method:\"POST\",\n  //     baseURL: `http://localhost:5000/api/login`,\n  //     withCredentials: true,\n  //   })\n  (username, password, coordinates) => {\n    return this.service.post('/login', {username, password, coordinates})\n    .then(response => {\n      this.setUser(response.data)\n    return response.data})     \n  }\n\n  setUser(user){\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\n// getUser(){\n//   return JSON.parse(localStorage.getItem('user'));\n// }\n\n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(() => {\n      localStorage.removeItem('user');\n    })\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n// import MainLayout from '../layout/MainLayout';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.formRef = React.createRef();\n    this.state = { username: '', password: '', file: null };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const form = new FormData(this.formRef.current)\n    this.service.signup(form)\n    .then(response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            file: null\n\n        });\n        this.props.history.push('/profile')\n        // this.props.getUser()\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  uploadPic=(event)=>{\n    this.setState({\n      file: (event.target.files[0])})\n  }\n\n  render(){\n    return(\n      <div className=\"loginPage\">\n         <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n        </nav>\n      {/* <MainLayout {...this.props}> */}\n      <Link to=\"/\" style={{ textDecoration: 'none', color:\"white\" }}><i className=\"fas fa-times-circle fa-2x\"></i></Link>\n        <div className=\"signupForm\">\n        <h3>Register</h3>\n        <form className=\"loginInput\" ref={this.formRef} onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <label>Profile Picture:</label>\n          <input type=\"file\" name=\"picture\" onChange={this.uploadPic}/>\n\n          <button className=\"submitBtn\" type=\"submit\">Register</button>\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/login\"} style={{ color: 'rgb(5, 5, 5)', textDecoration:\"underline\" }}> Login</Link>\n        </p>\n        </div>\n      {/* </MainLayout> */}\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport MainLayout from '../components/layout/MainLayout';\nimport AuthService from '../components/auth/auth-service';\nimport './Profile.css';\n\nexport default class Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state = { loggedInUser: null };\n        this.service = new AuthService();\n      }\n    \n      componentDidMount() {\n        debugger\n        let user= this.props.getUser(); \n        this.setState({loggedInUser:user})\n        debugger\n      }\n      \n      // getTheUser= () => {\n      //   return JSON.parse(localStorage.getItem('user'));\n      // }\n\n      logoutUser = () =>{\n        this.service.logout()\n        .then(() => {\n          this.setState({ loggedInUser: null });\n          this.props.history.push('/');\n          // this.props.getUser();  \n        })\n      }\n\n    render() {\n          if(this.state.loggedInUser){\n            return (\n              <MainLayout {...this.props}>\n                <div className=\"ProfilePage\">\n                    <div className=\"profilePic\" style={{  backgroundImage: `url(${this.state.loggedInUser.profilePicUrl})`}}></div>\n                    <Link style={{ textDecoration:\"none\" }} to=\"/editProfile\"><div className=\"editIcon\"></div></Link>\n                    <h3>{this.state.loggedInUser.username}</h3>\n                    <hr style={{width: \"100%\"}}/>\n                    <p className=\"aboutSect\">About: {this.state.loggedInUser.about} </p>\n                    <Link to='/'>\n                    <button style={{margin: \"20px 0\"}} className=\"registerBtn\" onClick={() => this.logoutUser()}>Logout</button>\n                    </Link>\n                </div>\n              </MainLayout>\n            )\n          }\n          {\n            return(\n              <MainLayout {...this.props}>Loading...</MainLayout>\n            )\n          }         \n    }\n}\n","import React, { Component } from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport axios from 'axios';\nimport '../components/auth/Login.css'\n\nexport default class EditProfile extends Component {\n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {about: '', file: null };\n      }\n    \n      handleFormSubmit = (event) => {\n        event.preventDefault();\n        const form = new FormData(this.formRef.current);\n        form.append('user',this.props.userInSession._id)\n        axios({\n            method:\"POST\",\n            baseURL: `${process.env.REACT_APP_API}/edit`,\n            withCredentials: true,\n            data:form\n          })\n        .then(response => {\n            this.setState({\n                about: \"\",\n                file: null\n    \n            });\n            localStorage.setItem('user', JSON.stringify(response.data));\n            this.props.history.push('/profile')\n        })\n        .catch( error => console.log(error) )\n      }\n      \n      handleChange = (event) => {  \n        const {name, value} = event.target;\n        this.setState({[name]: value});\n      }\n          \n      uploadPic=(event)=>{\n        this.setState({\n          file: (event.target.files[0])})\n      }\n\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <form className=\"editPage signupForm\" ref={this.formRef} onSubmit={this.handleFormSubmit}>\n                    <label>About </label>\n                    <input style={{height:'100px', width:'300px'}} type=\"text\" name=\"about\" value={this.state.about} onChange={ e => this.handleChange(e)}/>\n\n                    <label>Profile Picture </label>\n                    <input style={{border:\"solid 1px grey\", width:\"300px\"}} type=\"file\" name=\"picture\" onChange={this.uploadPic}/>\n\n                    <button className=\"submitBtn\">Save</button>\n                </form>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport {geolocated} from 'react-geolocated';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: ''};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username= this.state.username;\n    const password=this.state.password;\n    this.service.login(username,password, {longitude: this.props.coords.longitude, latitude: this.props.coords.latitude})\n    .then( response => {\n        this.setState({ username: \"\", password: \"\"});\n        // this.props.getUser();\n        this.props.history.push('/profile')\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    return(\n      <div className=\"loginPage\">\n      {/* <MainLayout {...this.props}> */}\n      <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}>Login</Link>\n      </nav>\n      <Link to=\"/\" style={{ textDecoration: 'none', color:\"white\" }}><i className=\"fas fa-times-circle fa-2x\"></i></Link>\n        <div className=\"loginForm\">\n        <h3>Log in</h3>\n        <form className=\"loginInput\" onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n          <label>Password:</label>\n          <input type=\"text\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <button className=\"submitBtn\" type=\"submit\">Log in</button>\n        </form>\n        <p>Don't have account? \n        <Link to={\"/signup\"} style={{ color: 'rgb(5, 5, 5)', textDecoration:\"underline\" }}> Register</Link>\n        </p>\n        </div>\n      {/* </MainLayout> */}\n      </div>\n    )\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Login);","import React, { Component } from 'react';\nimport {geolocated} from 'react-geolocated';\nimport axios from 'axios';\nimport MainLayout from '../components/layout/MainLayout';\nimport {Link} from 'react-router-dom';\nimport './Nearby.css';\n\nclass Nearby extends Component {\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={\n            users:[],\n            sortedUsers:[]\n        }\n        this.calculateDistance=this.calculateDistance.bind(this);\n    }\n\n    calculateDistance (lat1, lon1, lat2, lon2){\n        lat1 =  Math.PI * lat1/180\n        lat2 = Math.PI * lat2/180\n        lon1 = Math.PI * lon1/180\n        lon2 = Math.PI * lon2/180\n        var R = 6371; // km\n        var x = (lon2 - lon1) * Math.cos((lat1 + lat2) / 2);\n        var y = (lat2 - lat1);\n        var d = Math.floor(Math.sqrt(x * x + y * y) * R);\n        return d;\n      }\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`${process.env.REACT_APP_API}/nearby`, {withCredentials:true})\n        .then(responseFromApi => {\n            if (this._isMounted) {\n                let users= this.calculateUserDist(responseFromApi.data);\n                    this.setState({sortedUsers:users})\n                    this.props.history.push('/nearby')\n        }\n    })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n      calculateUserDist= (users)=> {\n          debugger\n        let userLong= this.props.userInSession.longitude;\n        let userLat= this.props.userInSession.latitude;\n        for (var i = 0; i < users.length; i++) {\n            let otherLong=users[i].longitude;\n            let otherLat= users[i].latitude;\n            users[i][\"distance\"] = this.calculateDistance(userLat,userLong,otherLat,otherLong);}\n        users.sort(function(a, b) { \n            return a.distance - b.distance;\n        });\n        return users\n    } \n\n    render() {\n        if(this.state.sortedUsers.length>0){        \n        const users = this.state.sortedUsers;\n        let eachUser=users.map(user=>{\n            return(\n                // <div className=\"eachUser\" key={user.username}>\n                    <Link style={{textDecoration:\"none\"}} to={{ pathname: `/nearby/${user._id}`,\n                                nearbyUserProps: {user: user}}}>\n\n                        <div className=\"avaPic eachUser\" style={{backgroundImage:`url(${user.profilePicUrl})` }}>\n                            {/* <i className=\"fas fa-info-circle fa-2x\"></i> */}\n                        <div>\n                            <h4>{user.username}</h4>\n                            <p><i className=\"fas fa-map-marker-alt\"></i> {user.distance}km</p>\n                        </div>\n                        </div>\n                    </Link>\n                // </div>\n            )\n        })\n        return (\n            <MainLayout {...this.props}>\n            <div className=\"NearbyPage\">\n              {eachUser}  \n            </div>\n            </MainLayout>\n        )}\n        return(\n            <MainLayout {...this.props}>\n                <h1>Loading...</h1>\n            </MainLayout>\n        )\n    }\n}\n\nexport default geolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n  })(Nearby);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport MainLayout from '../components/layout/MainLayout';\n\nexport default class NearbyUser extends Component {\n    constructor(props){\n        super(props);\n        this.state={}\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_API}/nearby/${params.id}`, {withCredentials:true})\n        .then( response =>{\n          const user = response.data;\n          this.setState(user);\n        //   this.props.history.push(`/nearby/${this.state._id}`)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"NearbyUser\">\n                <MainLayout {...this.props}>\n                <div className=\"avaPic\" style={{backgroundImage:`url(${this.state.profilePicUrl})` }}>\n                </div>\n                <h3>{this.state.username}</h3>\n                <p><i className=\"fas fa-map-marker-alt\"></i> {this.props.location.nearbyUserProps.user.distance}km</p>\n                <hr/>\n                <p>{this.state.about}</p>\n                <Link to={{ pathname: `/chat/${this.state._id}`,\n                            chatPartner: {user: this.props.location.nearbyUserProps.user}}}>\n                    <button style={{margin: \"20px 0\"}} className=\"\" type=\"submit\">Message</button>\n                </Link>\n                </MainLayout>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './AllRooms.css';\n\nexport default class AllRooms extends Component {\n    constructor (props){\n        super(props);\n        this.state={\n            user: JSON.parse(localStorage.getItem('user')),\n            otherUsers:{},\n            // currentRoom:this.props.currentRoom\n        }\n    }\n\n    componentDidMount(){\n            axios.get(`${process.env.REACT_APP_API}/nearby`,\n                         {withCredentials:true})\n            .then(response=>{\n                 this.setState({otherUsers:response.data})\n             })\n            .catch(err=>{\n            console.log(err)\n            })\n    }\n\n\n    render() {\n        const {rooms} =this.props\n        let eachRoom= rooms.map((room, index)=>{\n            let roomName= room[\"member_user_ids\"].filter(id => id !== this.state.user.username)[0]\n            let partner= this.state.otherUsers.filter(user => user.username=== roomName)[0]\n            const isRoomActive = room.id === this.props.currentRoom.id ? 'active' : '';   \n            debugger\n            return(\n                <Link className=\"eachRoom\" to={`/inbox/${room.id}`} key={index}>\n                <li className={isRoomActive} key={room.id}>\n                    <div className=\"inboxList\">\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${partner.profilePicUrl})`}}>\n                    </div>\n                    {roomName}\n                    </div>\n                </li>\n                </Link>\n            )\n        })\n        return (\n            <ul className=\"roomsTab\">\n             {eachRoom}   \n            </ul>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport \"./MessageList.css\";\n\nexport default class MessageList extends Component {\n   \n    render() {\n        let eachMess= this.props.messages.map((message, index)=>{\n            if(message.senderId === this.props.userInSession.username){\n                return(\n                    <div key={index} className=\"currentUserDiv\" >\n                        {/* <div className=\"eachMes\"> */}\n                        {/* <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.props.userInSession.profilePicUrl})`}}> */}\n                        {/* </div> */}\n                        <p className=\"currentUser\">{message.text}</p>\n                        {/* <div style={{ float:\"left\", clear: \"both\" }}  ref={(el) => { this.messagesEnd = el; }} ></div> */}\n                        {/* </div> */}\n                    </div>\n                    )\n            }\n            else{\n                return(\n                    <div key={index} >\n                        {/* <div className=\"eachMes\">                        */}\n                        {/* <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.props.location.chatPartner.user.profilePicUrl})`}}> */}\n                        {/* </div> */}\n                        <p className=\"chatPartner\">{message.text}</p>\n                        {/* </div> */}\n                    </div>\n                )\n            }\n            \n            \n        })\n        return (\n            <div className=\"MessageList\">\n                {eachMess}\n            </div>\n        )\n    }\n   \n}\n","import React, {Component} from 'react';\nimport { Smile } from 'react-feather';\nimport { Picker } from 'emoji-mart';\nimport {\n    addEmoji,\n    toggleEmojiPicker,\n  } from '../../method';\nimport 'emoji-mart/css/emoji-mart.css';\nimport \"./Input.css\";\n\n    class Input extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                message: \"\",\n                showEmojiPicker: false,\n            }\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n            this.addEmoji = addEmoji.bind(this);\n            this.toggleEmojiPicker = toggleEmojiPicker.bind(this);\n        }\n        handleChange(e) {\n            this.setState({\n                message: e.target.value\n            })\n        }\n        handleSubmit(e) {\n            e.preventDefault();\n            this.props.onSubmit(this.state.message);\n            this.setState({\n                message: ''\n            })\n        }\n        render() {\n            const {showEmojiPicker} = this.state; \n            return (\n                <>\n                    {showEmojiPicker ? (\n                        <Picker set=\"emojione\" onSelect={this.addEmoji} />\n                    ) : null}\n                    <form onSubmit={this.handleSubmit} className=\"input-field\">\n                    <button type=\"button\" className=\"toggle-emoji\" onClick={this.toggleEmojiPicker}>\n                        <Smile />\n                    </button>\n                    <input className=\"message-input\" type=\"text\" placeholder=\"Type your message and hit ENTER to send...\" onChange={this.handleChange} value={this.state.message}/>\n                    {/* <input className=\"message-submit\" type=\"submit\" value=\"send\" /> */}\n                    </form>\n                </>\n            )\n        }\n    }\n    export default Input;","// import Chatkit from '@pusher/chatkit-client';\n// import axios from 'axios';\n\n    function toggleEmojiPicker() {\n      this.setState({\n        showEmojiPicker: !this.state.showEmojiPicker,\n      });\n    }\n\n    function addEmoji(emoji) {\n      const { message } = this.state;\n      const text = `${message}${emoji.native}`;\n\n      this.setState({\n        message: text,\n        showEmojiPicker: false,\n      });\n    }\n\nexport {toggleEmojiPicker, addEmoji };","import React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nimport '../../pages/Inbox.css';\n\nexport default class EachRoom extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            userInSession: JSON.parse(localStorage.getItem('user')),\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.match.params.id !== this.props.match.params.id) {\n            const {params}= this.props.match;\n            let roomId=params.id\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.state.userInSession.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/authenticate`\n                })\n            })\n    \n            chatManager\n                    .connect()\n                    .then(currentUser => {\n                        debugger\n    \n                        this.setState({\n                            currentUser:currentUser,\n                            messages:[]\n                        })\n                        currentUser.subscribeToRoom({\n                            roomId: `${roomId}`,\n                            messageLimit: 50,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                                debugger\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            this.props.setRoom(currentRoom)\n\n                            })\n                            .catch(error => console.log(error))\n                        })\n        }\n    }\n\n    componentDidMount (){\n        debugger\n        const {params}= this.props.match;\n        let roomId=params.id\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.state.userInSession.username,\n            tokenProvider: new TokenProvider({\n                url: `${process.env.REACT_APP_API}/authenticate`\n            })\n        })\n\n        chatManager\n                .connect()\n                .then(currentUser => {\n                    debugger\n\n                    this.setState({\n                        currentUser:currentUser,\n                        message:[]\n                    })\n                    currentUser.subscribeToRoom({\n                        roomId: `${roomId}`,\n                        messageLimit: 50,\n                        hooks: {\n                            onMessage: message => {\n                                this.setState({\n                                    messages: [...this.state.messages, message]\n                                })\n                            },\n                        }})\n                        .then(currentRoom => {\n                            debugger\n                        this.setState({\n                            currentRoom,\n                            users: currentRoom.userIds\n                        })\n                        this.props.setRoom(currentRoom)\n                        })\n                        .catch(error => console.log(error))\n    })}\n\n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        debugger\n        return (\n            <div className=\"eachRoom\"> \n                <MessageList messages={this.state.messages} userInSession={this.state.userInSession}/>           \n                <Input className=\"input-field-one\" onSubmit={this.addMessage} />            \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom';\nimport axios from 'axios';\nimport AllRooms from '../components/message/AllRooms';\nimport EachRoom from '../components/message/EachRoom';\nimport MainLayout from '../components/layout/MainLayout'\nimport './Inbox.css';\n\nexport default class Inbox extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            chatRooms:[],\n            currentUser:{}, \n            currentRoom:{}\n        };\n        this.setCurrentRoom= this.setCurrentRoom.bind(this);\n    }\n\n    componentDidMount (){\n        debugger\n        let user= this.props.getUser(); \n        axios.get(`${process.env.REACT_APP_API}/inbox`, \n                    {withCredentials:true})\n        .then(response => {\n            console.log(response);\n                let chatRooms= response.data;\n                this.setState({chatRooms:chatRooms, currentUser: user})\n    })\n    }\n\n    setCurrentRoom= (room)=>{\n        this.setState({\n            currentRoom: room\n        })\n    }\n\n    render() {\n        return (\n            <MainLayout {...this.props} className=\"Dashboard\">\n                <div className=\"inboxPage\">\n                <AllRooms rooms={this.state.chatRooms} currentUser={this.state.currentUser} currentRoom={this.state.currentRoom}/>\n                <Route path=\"/inbox/:id\" render={(props)=><EachRoom rooms={this.state.chatRooms} userInSession={this.state.currentUser} setRoom={this.setCurrentRoom} {...props}/>}/>\n                </div>\n            </MainLayout>\n        )\n    }\n}\n","import React from 'react';\n    import { Segment, Button, Form } from 'semantic-ui-react';\n    export default class Login extends React.Component {\n        state = {\n            username: ''\n        };\n        render() {\n            return (\n                <div class=\"loginToCommon\">\n                    <form className=\"loginToCommonForm\" onSubmit={this.handleFormSubmit.bind(this)}>\n                            <label>Welcome to the Common Room!</label>\n                            <input placeholder='Enter your username' \n                                   value={this.state.username} \n                                   onChange={this.handleUsernameChange.bind(this)} />\n                        <button type='submit'>Enter</button>\n                    </form>  \n                </div>\n            );\n        }\n        handleUsernameChange(e) {\n            this.setState({\n                username: e.target.value\n            });\n        }\n        handleFormSubmit() {\n            if (this.state.username) {\n                this.props.login(this.state.username);\n            }\n        }\n    }\n","import React from 'react';\nimport { List, Icon, Header } from 'semantic-ui-react';\n    \nexport default function Rooms({ joined, joinable, activeRoom, enterRoom, leaveRoom }) {\n    const joinedRooms = joined.map((room) => (\n        <List.Item key={room.id}>\n            <List.Content floated='right'>\n                <a onClick={() => leaveRoom(room.id)}>Leave</a>\n            </List.Content>\n            <Icon name={room.id === activeRoom ? 'right triangle' : ''} />\n            <List.Content>\n                <a onClick={() => enterRoom(room.id)}>{ room.name }</a>\n            </List.Content>\n        </List.Item>\n    ));\n    const joinableRooms = joinable.map((room) => (\n        <List.Item key={room.id}>\n            <Icon name=\"\" />\n            <List.Content>\n                <a onClick={() => enterRoom(room.id)}>{ room.name }</a>\n            </List.Content>\n        </List.Item>\n    ));\n    return (\n        <div>\n            <Header as=\"h4\">Active Rooms</Header>\n            <List divided relaxed>\n                { joinedRooms }\n            </List>\n            <Header as=\"h4\">Joinable Rooms</Header>\n            <List divided relaxed>\n                { joinableRooms }\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Grid, List } from 'semantic-ui-react';\nimport Pusher from 'pusher-js';\n\nvar pusher = new Pusher( \"4c266cab29bd293c0092\", {\n            cluster: \"eu\",\n            forceTLS: true\n        });\n\nconst PIECES = {\n    'WK': '♔',\n    'WQ': '♕',\n    'WR': '♖',\n    'WB': '♗',\n    'WN': '♘',\n    'WP': '♙',\n    'BK': '♚',\n    'BQ': '♛',\n    'BR': '♜',\n    'BB': '♝',\n    'BN': '♞',\n    'BP': '♟'\n}\n\nexport default class GameBoard extends React.Component {\n    state = {\n        board: [],\n        players: {}\n    };\n\n    render() {\n        const board = this.state.board\n            .map((row, rowIndex) => {\n                return row.map((piece, columnIndex) => {\n                    const pieceSymbol = PIECES[piece];\n                    if (pieceSymbol) {\n                        return <text key={rowIndex + '-' + columnIndex} x={columnIndex} y={rowIndex + 0.8} style={{font: '1px sans-serif'}}>{pieceSymbol}</text>\n                    }\n                    return undefined;\n                }).filter((value) => value);\n            });\n\n        let activeCell;\n        if (this.state.activeCell) {\n            activeCell = <rect x={this.state.activeCell.x} y={this.state.activeCell.y} width=\"1\" height=\"1\" fillOpacity=\"0.5\" fill=\"#F00\" />\n        }\n\n        const players = Object.keys(this.state.players).map((player) => {\n            const color = this.state.players[player];\n            return (\n                <List.Item>\n                    <List.Header>{ color }</List.Header>\n                    { player }\n                </List.Item>\n            );\n        });\n\n        return (\n            <Grid>\n                <Grid.Row columns={2}>\n                    <Grid.Column>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"-.05 -.05 8.1 8.1\">\n                            <rect x=\"-.5\" y=\"-.5\" width=\"9\" height=\"9\" style={{fill: '#F4A460'}} />\n                            <path fill=\"#FFEBCD\" d=\"M0,0H8v1H0zm0,2H8v1H0zm0\n                            2H8v1H0zm0,2H8v1H0zM1,0V8h1V0zm2,0V8h1V0zm2\n                            0V8h1V0zm2,0V8h1V0z\"/>\n\n                            { [].concat.apply([], board) }\n\n                            { activeCell }\n                            <rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fillOpacity=\"0.1\" onClick={(e) => this._handleBoardClick(e)} />\n                        </svg>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <List>\n                            { players }\n                        </List>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n\n    componentDidMount() {\n        const room = this.props.room;\n\n        const channel = pusher.subscribe(`game-${room}`);\n        channel.bind('board-updated', () => {\n            this._refreshGame();\n        });\n        this._refreshGame();\n    }\n\n    componentWillUnmount() {\n        const room = this.props.room;\n\n        pusher.unsubscribe(`game-${room}`);\n    }\n\n    _handleBoardClick(e) {\n        const dim = e.target.getBoundingClientRect();\n        const x = e.clientX - dim.left;\n        const y = e.clientY - dim.top;\n\n        const cellX = Math.floor((x / 200) * 8);\n        const cellY = Math.floor((y / 200) * 8);\n\n        if (this.state.activeCell) {\n            if (this.state.activeCell.x === cellX && this.state.activeCell.y === cellY) {\n                this.setState({\n                    activeCell: null\n                });\n            } else {\n                axios.request({\n                    method: 'POST',\n                    url: `${process.env.REACT_APP_API}/games/` + this.props.room,\n                    data: {\n                        player: this.props.user.id,\n                        fromRow: this.state.activeCell.y,\n                        fromColumn: this.state.activeCell.x,\n                        toRow: cellY,\n                        toColumn: cellX\n                    }\n                });\n                this.setState({\n                    activeCell: null\n                });\n            }\n        } else {\n            this.setState({\n                activeCell: {\n                    x: cellX,\n                    y: cellY\n                }\n            });\n        }\n    }\n\n    _refreshGame() {\n        axios.request({\n            url: `${process.env.REACT_APP_API}/games/` + this.props.room\n        })\n        .then((response) => {\n            this.setState({\n                board: response.data.board,\n                players: response.data.players\n            });\n        });\n    }\n\n    getPlayers() {\n        return Object.keys(this.state.players);\n    }\n}\n// import React from 'react';\n// import axios from 'axios';\n// import { Grid, List } from 'semantic-ui-react';\n// import Pusher from 'pusher-js';\n//     var pusher = new Pusher( \"4c266cab29bd293c0092\", {\n//         cluster: \"eu\",\n//         forceTLS: true\n//     });\n// const PIECES = {\n//     'WK': '♔',\n//     'WQ': '♕',\n//     'WR': '♖',\n//     'WB': '♗',\n//     'WN': '♘',\n//     'WP': '♙',\n//     'BK': '♚',\n//     'BQ': '♛',\n//     'BR': '♜',\n//     'BB': '♝',\n//     'BN': '♞',\n//     'BP': '♟'\n// }\n// export default class GameBoard extends React.Component {\n//     state = {\n//         board: [],\n//         players: {}\n//     };\n\n//     componentDidMount() {\n//         const room = this.props.room;\n//         const channel = pusher.subscribe(`game-${room}`);\n//         channel.bind('board-updated', () => {\n//             this._refreshGame();\n//         });\n//         this._refreshGame();\n//     }\n\n//     componentWillUnmount() {\n//         const room = this.props.room;\n//         pusher.unsubscribe(`game-${room}`);\n//     }\n\n//     render() {\n//         const board = this.state.board\n//             .map((row, rowIndex) => {\n//                 return row.map((piece, columnIndex) => {\n//                     const pieceSymbol = PIECES[piece];\n//                     if (pieceSymbol) {\n//                         return <text key={rowIndex + '-' + columnIndex} x={columnIndex} y={rowIndex + 0.8} style={{font: '1px sans-serif'}}>{pieceSymbol}</text>\n//                     }\n//                     return undefined;\n//                 }).filter((value) => value);\n//             });\n//         let activeCell;\n//         if (this.state.activeCell) {\n//             activeCell = <rect x={this.state.activeCell.x} y={this.state.activeCell.y} width=\"1\" height=\"1\" fillOpacity=\"0.5\" fill=\"#F00\" />\n//         }\n//         const players = Object.keys(this.state.players).map((player) => {\n//             const color = this.state.players[player];\n//             return (\n//                 <List.Item>\n//                     <List.Header>{ color }</List.Header>\n//                     { player }\n//                 </List.Item>\n//             );\n//         });\n//         return (\n//             <Grid>\n//                 <Grid.Row columns={2}>\n//                     <Grid.Column>\n//                         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"-.05 -.05 8.1 8.1\">\n//                             <rect x=\"-.5\" y=\"-.5\" width=\"9\" height=\"9\" style={{fill: '#F4A460'}} />\n//                             <path fill=\"#FFEBCD\" d=\"M0,0H8v1H0zm0,2H8v1H0zm0\n//                             2H8v1H0zm0,2H8v1H0zM1,0V8h1V0zm2,0V8h1V0zm2\n//                             0V8h1V0zm2,0V8h1V0z\"/>\n//                             { [].concat.apply([], board) }\n//                             { activeCell }\n//                             <rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fillOpacity=\"0.1\" onClick={(e) => this._handleBoardClick(e)} />\n//                         </svg>\n//                     </Grid.Column>\n//                     <Grid.Column>\n//                         <List>\n//                             { players }\n//                         </List>\n//                     </Grid.Column>\n//                 </Grid.Row>\n//             </Grid>\n//         );\n//     }\n  \n//     _handleBoardClick(e) {\n//         const dim = e.target.getBoundingClientRect();\n//         const x = e.clientX - dim.left;\n//         const y = e.clientY - dim.top;\n//         const cellX = Math.floor((x / 200) * 8);\n//         const cellY = Math.floor((y / 200) * 8);\n//         if (this.state.activeCell) {\n//             if (this.state.activeCell.x === cellX && this.state.activeCell.y === cellY) {\n//                 this.setState({\n//                     activeCell: null\n//                 });\n//             } else {\n//                 axios.request({\n//                     method: 'POST',\n//                     url: `${process.env.REACT_APP_API}/games/` + this.props.room,\n//                     data: {\n//                         player: this.props.user.id,\n//                         fromRow: this.state.activeCell.y,\n//                         fromColumn: this.state.activeCell.x,\n//                         toRow: cellY,\n//                         toColumn: cellX\n//                     }\n//                 });\n//                 this.setState({\n//                     activeCell: null\n//                 });\n//             }\n//         } else {\n//             this.setState({\n//                 activeCell: {\n//                     x: cellX,\n//                     y: cellY\n//                 }\n//             });\n//         }\n//     }\n//     _refreshGame() {\n//         axios.request({\n//             url: `${process.env.REACT_APP_API}/games/` + this.props.room\n//         })\n//         .then((response) => {\n//             this.setState({\n//                 board: response.data.board,\n//                 players: response.data.players\n//             });\n//         });\n//     }\n// }\n","import React from 'react';\nimport { Grid, List, Comment, Form, Input } from 'semantic-ui-react';\nimport GameBoard from './GameBoard';\n\nexport default class Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: this.props.room.userIds,\n            messages: [],\n            newMessage: ''\n        };\n\n        props.user.subscribeToRoom({\n            roomId: props.room.id,\n            messageLimit: 50,\n            hooks: {\n                onUserJoined: (user) => {\n                    this.setState({\n                        users: props.room.users\n                    });\n                },\n                onUserLeft: (user) => {\n                    this.setState({\n                        users: props.room.users\n                    });\n                },\n                onMessage: (message) => {\n                    const messages = this.state.messages;\n                    let opponent;\n                    if (message.attachment && message.attachment.link && message.attachment.link.startsWith('urn:player:')) {\n                        opponent = message.attachment.link.substring(11);\n                        if (opponent !== props.user.id) {\n                            opponent = undefined;\n                        }\n                    }\n                    messages.push({\n                        id: message.id,\n                        user: message.senderId,\n                        message: this.state.newMessage,\n                        opponent: opponent\n                    });\n                    this.setState({\n                        messages: [...messages, message]\n                    });\n                }\n            }\n        })\n        .then(currentRoom=>{\n            this.setState({user: currentRoom.userIds})\n        })\n    }\n\n    render() {\n        const users = this.state.users\n            .filter((user) => user.id !== this.props.user.id)\n            .map((user) => (\n                <li style={{listStyle:\"none\"}} key={user.id}>\n                    <b style={{margin: \"0\", padding:\"0\"}}>\n                        { user.name }\n                    </b>\n                    <p style={{floated:'right'}}>\n                        <a onClick={() => this._challengePlayer(user)}>Challenge</a>\n                    </p>\n                </li>\n            ));\n\n        const messages = this.state.messages\n            .map((message) => {\n                let acceptGame;\n                if (message.opponent) {\n                    acceptGame = (\n                            <a onClick={() => this._acceptChallenge(message.user)}>Accept Challenge</a>\n                    );\n                }\n                return (\n                    // <div key={message.id}>\n                        <div className=\"columnFlex\">\n                            <h4 className=\"flexpart\">{ message.user}</h4>\n                            <p className=\"flexpart\">{ message.text }</p>\n                            { acceptGame }\n                        </div>\n                    // </div>\n                );\n            });\n\n        return (\n            <>\n                <div className=\"rowFlex\">\n                    <div className=\"allMessages\">\n                        { this.props.game && <GameBoard room={this.props.game} user={this.props.user} ref={(child) => { this._gameBoard = child; }}/> }\n                        <div className=\"ColumnFlex\" >\n                            { messages }\n                        </div>\n                        <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.messagesEnd = el; }} />\n                    </div>\n                    <div className=\"availableUsers\">\n                        <ul>\n                            <li style={{listStyle:\"none\"}}>\n                                <b>\n                                   You: { this.props.user.name }\n                                </b>\n                            </li>\n                            { users }\n                        </ul>\n                    </div>\n                </div>\n                <div>\n                    <Form onSubmit={this._handleSubmit.bind(this)}>\n                        <input className=\"typeText\" type=\"text\" placeholder='New Message...' value={this.state.newMessage} onChange={this._handleNewMessageChange.bind(this)} />\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n    componentDidMount() {\n        this._scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this._scrollToBottom();\n    }\n\n    _scrollToBottom() {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    _handleNewMessageChange(e) {\n        this.setState({\n            newMessage: e.target.value\n        });\n    }\n\n    _handleSubmit() {\n        const { newMessage } = this.state;\n        const { user, room } = this.props;\n        user.sendMessage({\n            text: newMessage,\n            roomId: room.id\n        });\n        this.setState({\n            newMessage: ''\n        });\n    }\n\n    _challengePlayer(player) {\n        const { user, room } = this.props;\n        user.sendMessage({\n            text: `I challenge ${player.name} to a game`,\n            roomId: room.id,\n            attachment: {\n                link: `urn:player:${player.id}`,\n                type: 'file',\n                fetchRequired: false\n            }\n        });\n    }\n\n    _acceptChallenge(player) {\n        const { user } = this.props;\n        user.createRoom({\n            name: `${user.id} vs ${player}`,\n            addUserIds: [player]\n        }).then((room) => {\n            this.props.startedGame(room.id, user.id, player);\n        });\n    }\n\n    getPlayersInRoom() {\n        const players = this._gameBoard ? this._gameBoard.getPlayers() : [];\n        const playersInRoom = this.state.users\n            .filter((user) => players.includes(user.id));\n        return playersInRoom;\n    }\n}","import React from 'react';\n    import { Segment, Grid } from 'semantic-ui-react';\n    import { TokenProvider, ChatManager } from '@pusher/chatkit-client';\n    import Rooms from './Rooms';\n    import Chat from './Chat';\n    import axios from 'axios';\n\n    export default class Games extends React.Component {\n        constructor(props) {\n            super(props);\n            debugger\n            this.state = {\n            joined: [],\n            joinable: []\n        };\n        }\n\n        componentDidMount(){\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.props.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/commonRoom`\n                })\n            });\n\n            chatManager\n            .connect()\n            .then(currentUser => {\n                console.log(currentUser)\n                this.setState({\n                    currentUser: currentUser\n                });\n                currentUser.getJoinableRooms().then((rooms) => {\n                    let lobby = rooms.find(room => room.name === 'Lobby');\n                    if (lobby) {\n                        currentUser.joinRoom({ roomId: lobby.id });\n                    } else {\n                        lobby = currentUser.rooms.find(room => room.name === 'Lobby');\n                    }\n                    if (lobby) {\n                        this.setState({\n                            lobbyId: lobby.id,\n                            activeRoom: lobby.id\n                        });\n                    }\n                });\n                setInterval(this._pollRooms.bind(this), 5000);\n                this._pollRooms();\n            })\n            .catch((e) => {\n                console.log('Failed to connect to Chatkit');\n                console.log(e);\n            });\n        }\n\n        _pollRooms() {\n            const { currentUser } = this.state;\n            currentUser.getJoinableRooms()\n                .then((rooms) => {\n                    this.setState({\n                        joined: currentUser.rooms,\n                        joinable: rooms\n                    })\n                });\n        }\n        \n        _enterRoom(id) {\n            debugger\n            const { currentUser } = this.state;\n            currentUser.joinRoom({ roomId: id })\n                .then(() => {\n                    this.setState({\n                        activeRoom: id\n                    });\n                    this._pollRooms();\n                })\n                .catch(() => {\n                    console.log('Failed to enter room');\n                });\n        }\n\n        _leaveRoom(id) {\n            const { currentUser } = this.state;\n            currentUser.leaveRoom({ roomId: id })\n                .then(() => {\n                    this._pollRooms();\n                })\n                .catch(() => {\n                    console.log('Failed to leave room');\n                });\n        }\n\n        _startedGame(roomId, white, black) {\n            axios.request({\n                url: `${process.env.REACT_APP_API}/games`,\n                method: 'POST',\n                data: {\n                    room: roomId,\n                    whitePlayer: white,\n                    blackPlayer: black\n                }\n            })\n            .then((response) => {\n                this.setState({\n                    activeRoom: roomId\n                });\n                this._pollRooms();\n            });\n          }\n      \n        render() {\n            const { currentUser } = this.state;\n            let chat;\n            if (currentUser) {\n                const room = currentUser.rooms.find((room) => room.id === this.state.activeRoom);\n                if (room) {\n                    const game = this.state.activeRoom !== this.state.lobbyId && this.state.activeRoom;\n                    chat = <Chat user={currentUser} room={room} key={room.id} startedGame={this._startedGame.bind(this)} game={game} />\n                }\n            }\n            return (\n                    <div className=\"rowFlex gamePage\">\n                        <div className=\"differentRooms\">\n                            <Rooms joined={this.state.joined}\n                                   joinable={this.state.joinable}\n                                   activeRoom={this.state.activeRoom}\n                                   enterRoom={this._enterRoom.bind(this)}\n                                   leaveRoom={this._leaveRoom.bind(this)} />\n                        </div>\n                        <div className=\"chatArea\">\n                            { chat }\n                        </div>\n                    </div>\n            );\n        }\n    }","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from '../components/share/Login';\nimport Games from '../components/share/Games';\nimport MainLayout from '../components/layout/MainLayout';\nimport \"../components/share/GameBoard.css\";\n\nclass CommonRoom extends React.Component {\n  constructor(props){\n      super(props);\n      this.state = {};\n  }\n\n   enterGame(username) {\n    this.setState({\n      username: username\n    });\n  }\n\n  render() {\n    let contents;\n    if (this.state.username) {\n      contents = <Games username={this.state.username} />\n    } else {\n      contents = <Login login={this.enterGame.bind(this)} />\n    }\n    return (\n      <>\n        { contents }\n      </>\n    );\n  }\n}\n\nexport default CommonRoom;","import React, { Component } from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport CommonRoom from \"./CommonRoom\";\nimport MainLayout from '../components/layout/MainLayout';\n\nexport default class SharePage extends Component {\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <div className=\"columnFlex\" style={{width:\"100%\", height: \"88vh\", justifyContent:\"space-between\"}}>\n                <div style={{display:\"flex\"}}>\n                <Link style={{textDecoration:\"none\", color: \"black\"}} to=\"/share/commonRoom\">\n                    <h4>Common Room</h4>\n                    {/* <p>Sed eleifend id ipsum a aliquam. Donec ultrices sollicitudin ullamcorper. \n                        Donec porta est in nibh elementum congue. \n                        Pellentesque tellus sapien, pharetra ut arcu a, consequat tincidunt leo. \n                        Integer diam metus, ultricies quis est at, eleifend cursus magna. \n                        Nam quis scelerisque eros. Duis a lectus vitae risus efficitur lacinia et a tortor. \n                        Etiam mollis dui lacus, eget tincidunt ligula condimentum vitae. Aliquam eu tellus tellus.</p> */}\n                </Link>\n\n                <Link style={{textDecoration:\"none\", color: \"black\"}} to=\"/sharingThings\">\n                    <h4>Sharing Corner</h4>\n                    {/* <p>Sed eleifend id ipsum a aliquam. Donec ultrices sollicitudin ullamcorper. \n                        Donec porta est in nibh elementum congue. \n                        Pellentesque tellus sapien, pharetra ut arcu a, consequat tincidunt leo. \n                        Integer diam metus, ultricies quis est at, eleifend cursus magna. \n                        Nam quis scelerisque eros. Duis a lectus vitae risus efficitur lacinia et a tortor. \n                        Etiam mollis dui lacus, eget tincidunt ligula condimentum vitae. Aliquam eu tellus tellus.</p> */}\n                </Link>\n                </div>\n                \n                <Route path='/share/commonRoom' render = {(routeProps) => <CommonRoom {...routeProps}/>} />\n                </div>\n            </MainLayout>\n        )\n    }\n}\n","// import React, { Component } from 'react';\n// import Talk from 'talkjs';\n\n// export default class ChatApp extends Component {\n//     constructor (props){\n//         super (props);\n//         this.inbox=undefined;\n//     }\n//     componentDidMount() {\n//         // Promise can be `then`ed multiple times\n//         Talk.ready\n//             .then(() => {\n//                 const me = new Talk.User({\n//                     id: `${this.props.userInSession._id}`,\n//                     name: `${this.props.userInSession.username}`,\n//                     photoUrl: `${this.props.userInSession.profilePicUrl}`,\n//                     welcomeMessage: \"Hey there! How are you? :-)\"\n//                 });\n\n//                 if (!window.talkSession) {\n//                     window.talkSession = new Talk.Session({\n//                         appId: \"txjMxHYM\",\n//                         me: me\n//                     });\n//                 }\n\n//                 const other = new Talk.User({\n//                     id: `${this.props.location.chatPartner.user._id}`,\n//                     name: `${this.props.location.chatPartner.user.username}`,\n//                     photoUrl: `${this.props.location.chatPartner.user.profilePicUrl}`,\n//                     welcomeMessage: \"Hey there! Love to chat :-)\"\n//                 });\n\n//                 // You control the ID of a conversation. oneOnOneId is a helper method that generates\n//                 // a unique conversation ID for a given pair of users. \n//                 const conversationId = Talk.oneOnOneId(me, other);\n\n//                 const conversation = window.talkSession.getOrCreateConversation(conversationId);\n//                 conversation.setParticipant(me);\n//                 conversation.setParticipant(other);\n\n//                 this.inbox = window.talkSession.createInbox({\n//                     selected: conversation\n//                 });\n//                 this.inbox.mount(this.container);\n\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     componentWillUnmount() {\n//         if (this.inbox) {\n//             this.inbox.destroy();\n//         }\n//     }\n\n//     render() {\n//         return ( \n//             < span >\n//             <div style = {{ height: '100vh' }} ref = { c => this.container = c }> Loading... \n//             </div> \n//             </span > );\n//     }\n// }\n\n\n\n\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nimport axios from 'axios';\n\nexport default class ChatApp extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            chatPartner: this.props.location.chatPartner.user,\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidMount (){\n        debugger\n        axios.get(`${process.env.REACT_APP_API}/newChat`, \n        {withCredentials:true})\n        .then(response => {\n            let chatRooms= response.data;\n            debugger\n            let existRoom=\"\";\n            for (var i=0; i<chatRooms.length; i++){\n                let usersInRoom = chatRooms[i][\"member_user_ids\"]\n                for (var j=0; j<usersInRoom.length; j++){\n                    debugger\n                    if (usersInRoom[j]===this.state.chatPartner.username){\n                        existRoom= chatRooms[i].id\n                        debugger\n                        break;\n                    }\n                }\n            }\n\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.props.userInSession.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/authenticate`\n\n                    // url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n                })\n                })\n                debugger\n            if (existRoom){\n                debugger\n                chatManager\n                    .connect()\n                    .then(currentUser => {\n                        this.setState({\n                            currentUser:currentUser\n                        })\n                        currentUser.subscribeToRoom({\n                            roomId: `${existRoom}`,\n                            messageLimit: 100,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            })\n                            .catch(error => console.log(error))\n            })} else {\n                chatManager\n                .connect()\n                .then(currentUser => {\n                    this.setState({\n                        currentUser:currentUser\n                    })\n\n                    return currentUser.createRoom({\n                        name: `${this.props.location.chatPartner.user.username}`,\n                        private: true,\n                        addUserIds: [ `${this.state.chatPartner.username}`],\n                        customData: { foo: 42 },\n                    })\n                    .then(room => {\n                        return currentUser.subscribeToRoom({\n                            roomId: `${room.id}`,\n                            messageLimit: 100,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            })\n                            .catch(error => console.log(error))\n            })})\n         }\n                \n            // this.setState({chatRooms:chatRooms})\n        })\n    }\n    \n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        return (\n            <>\n                <MessageList messages={this.state.messages} {...this.props}/>\n                <Input className=\"input-field\" onSubmit={this.addMessage} />\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ChatApp from '../components/message/ChatApp';\nimport MainLayout from '../components/layout/MainLayout';\n\nexport default class ChatPage extends Component {\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <ChatApp {...this.props}/>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport Home from './pages/Home.jsx';\nimport Signup from './components/auth/Signup.jsx';\nimport Profile from './pages/Profile.jsx';\nimport EditProfile from './pages/EditProfile.jsx';\nimport AuthService from './components/auth/auth-service.jsx';\nimport Login from './components/auth/Login.jsx';\nimport Nearby from './pages/Nearby.jsx';\nimport NearbyUser from './pages/NearbyUser.jsx';\nimport Inbox from './pages/Inbox';\nimport SharePage from './pages/SharePage';\nimport CommonRoom from './pages/CommonRoom';\nimport './App.css';\nimport ChatPage from './pages/ChatPage';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.service=new AuthService();\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  getTheUser= () => {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  render() {\n    this.fetchUser()\n      return (\n        <div className=\"App\">\n          <Route exact path='/profile' render = {(routeProps) => <Profile userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n          <Route exact path = '/editProfile' render = {(routeProps) => <EditProfile userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/nearby' render = {(routeProps) => <Nearby userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n          <Route exact path=\"/nearby/:id\" render = {(routeProps) => <NearbyUser userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/' render = {(routeProps) => <Home userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/signup' render = {(routeProps) => <Signup getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/login' render = {(routeProps) => <Login getUser={this.getTheUser} {...routeProps} />} />\n          <Route path='/inbox' render = {(routeProps) => <Inbox userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path=\"/chat/:id\" render= {(routeProps)=> <ChatPage userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route path=\"/share\" render= {(routeProps)=> <SharePage userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n\n        </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'; // <== !!!\n\nReactDOM.render((\n<Router> \n    <App />\n</Router> \n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}